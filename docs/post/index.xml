<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Nikolaus Piccolotto</title>
    <link>https://npiccolotto.com/post/</link>
    <description>Recent content in Posts on Nikolaus Piccolotto</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 02 Apr 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://npiccolotto.com/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>My first mechanical keyboard, and how you can get one too</title>
      <link>https://npiccolotto.com/my-first-mechanical-keyboard-and-how-you-can-get-one-too/</link>
      <pubDate>Tue, 02 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://npiccolotto.com/my-first-mechanical-keyboard-and-how-you-can-get-one-too/</guid>
      <description>People in my Twitter stream would post pictures of their workplace every once in a while. More often than not, the picture would feature a fancy keyboard. Like this:
[In Count Dracula voice]
uno dos tres 4K screens with terminals with i3
(Got a new dock) pic.twitter.com/PUe6Xu3xbM
&amp;mdash; Jessie Frazelle (@jessfraz) March 11, 2019  Okay, maybe it does not look extremely fancy, but it’s unusual enough. I would then search the internet about it, get intringued, and leave it at that.</description>
    </item>
    
    <item>
      <title>Inspecting React Children</title>
      <link>https://npiccolotto.com/inspecting-react-children/</link>
      <pubDate>Sat, 01 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://npiccolotto.com/inspecting-react-children/</guid>
      <description>Suppose you write a frontend framework in React, like Bootstrap. (If it’s for the web or react-native doesn’t matter for the argument.) There are components for different text styles (MediumText, SmallText…), for popular control elements (Dropdown, Button…) and so on. You want this to be modular and composable, so you pass a different text component to the Button instead of setting a size property on it. After all, the button size depends only on the content, why would you have a large button with small text inside?</description>
    </item>
    
    <item>
      <title>Building a Relay-compatible GraphQL Server</title>
      <link>https://npiccolotto.com/building-a-relay-compatible-graphql-server/</link>
      <pubDate>Fri, 03 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://npiccolotto.com/building-a-relay-compatible-graphql-server/</guid>
      <description>Read it over at the Zalando Tech Blog.</description>
    </item>
    
    <item>
      <title>Footnotes in pure CSS</title>
      <link>https://npiccolotto.com/footnotes-in-pure-css/</link>
      <pubDate>Thu, 19 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>https://npiccolotto.com/footnotes-in-pure-css/</guid>
      <description>Being a web developer is as much a blessing as it is a curse. One moment you’re reading an article about the most untradable players in the NBA by your favorite basketball author, the next you’re creeping around the footnote implementation of their site and wondering if Javascript is really necessary there.1
Of course it isn’t. There are games written completely in CSS. And they are also the solution to our problem.</description>
    </item>
    
  </channel>
</rss>